node('maven') { 
  env.threescaleurl = "https://fusedemo-admin.3scale.net";
  env.apiaccesstoken = "143d1a90ea5d369a88ec35310f06b86fec8569a1c34c21eaffc9f9906947962a";    
  env.appplanid = "2357355891901";
  env.metricsid = "2555417998898";
  env.normallimit = 50;
  
  env.newnamespace = "temp";
  env.stablenamespace = "temp";
  
  stage('moveNewToStable') { 
    print 'Move new image stream to stable image stream' 
    openshiftTag(namespace: "${env.newnamespace}", sourceStream: "fisgateway-service",  sourceTag: "latest", destinationnamespace: "${env.stablenamespace}", destinationStream: "fisgateway-service-stable", destinationTag: "latest")
  }
  
  stage('UpdateRouteToStable') {
    print 'deleteroute' 
    openshiftDeleteResourceByKey keys: "fisgateway-service", namespace: "${env.stablenamespace}", types: "route", verbose: "true"
    
    print 'Update Route to only point to stable service' 
    openshiftCreateResource jsonyaml: "{    'apiVersion': 'v1',    'kind': 'Route',    'metadata': {        'labels': {            'component': 'fisgateway-service-stable',            'group': 'quickstarts',            'project': 'fisgateway-service-stable',            'provider': 's2i',            'template': 'fisgateway-service',            'version': '1.0.0'        },        'name': 'fisgateway-service',        'namespace': '${env.stablenamespace}'    },    'spec': {        'host': 'fisgateway-service-temp.apps.mkt2go.com',        'to': {            'kind': 'Service',            'name': 'fisgateway-service-stable',            'weight': 100        },        'wildcardPolicy': 'None'    }}", namespace: "${env.stablenamespace}", verbose: "false"
  } 
  
  stage('StopNewServices') {
    print 'Stop all new service pod' 
    openshiftScale depCfg: "fisgateway-service-new", namespace: "${env.newnamespace}", replicaCount: "0", verifyReplicaCount: "true", verbose: "true"
  }
  
  stage('GetCurrentLimitId') { 
    print 'Get Current Limit Id'
    env.LIMIT_ID = sh (
      script: "curl --silent -X GET \"${env.threescaleurl}/admin/api/application_plans/${env.appplanid}/metrics/${env.metricsid}/limits.xml?access_token=${env.apiaccesstoken}\" --stderr - | sed -e 's,.*<id>\\([^<]*\\)</id>.*,\\1,g' ", 
      returnStdout: true
    ).trim()
    echo env.LIMIT_ID
  }
  
  stage('UpdateLimitToAllProd') { 
    print 'Update 3scale Limit back to normal'
    sh  "echo Updating Id ${env.LIMIT_ID} to less request ${env.normallimit} per min because of AB Testing"
    sh  "curl -s -o /dev/null -w \"%{http_code}\\n\" -X PUT  \"${env.threescaleurl}/admin/api/application_plans/${env.appplanid}/metrics/${env.metricsid}/limits/${env.LIMIT_ID}.xml\" -d \'access_token=${env.apiaccesstoken}&period=minute&value=${env.normallimit}\'"  
  }
}
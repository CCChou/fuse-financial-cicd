apiVersion: v1
kind: BuildConfig
metadata:
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "allprod-pipeline",  "kind": "DeploymentConfig"}]'
  labels:
    name: allprod-pipeline
    template: allprod-pipeline
  name: allprod-pipeline
spec:
  nodeSelector: null
  output: {}
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    type: None
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: "node('maven') { \n  env.threescaleurl = \"https://fusedemo-admin.3scale.net\";\n
        \ env.apiaccesstoken = \"143d1a90ea5d369a88ec35310f06b86fec8569a1c34c21eaffc9f9906947962a\";
        \   \n  env.appplanid = \"2357355891901\";\n  env.metricsid = \"2555417998898\";\n
        \ env.normallimit = 50;\n  \n  env.newnamespace = \"fisdemoprod\";\n  env.stablenamespace
        = \"fisdemoprod\";\n  \n  stage('moveNewToStable') { \n    print 'Move new image
        stream to stable image stream' \n    openshiftTag(namespace: \"${env.newnamespace}\",
        sourceStream: \"fisgateway-service\",  sourceTag: \"latest\", destinationnamespace:
        \"${env.stablenamespace}\", destinationStream: \"fisgateway-service-stable\",
        destinationTag: \"latest\")\n  }\n  \n  stage('UpdateRouteToStable') {\n    print
        'deleteroute' \n    openshiftDeleteResourceByKey keys: \"fisgateway-service\",
        namespace: \"${env.stablenamespace}\", types: \"route\", verbose: \"true\"\n
        \   \n    print 'Update Route to only point to stable service' \n    openshiftCreateResource
        jsonyaml: \"{    'apiVersion': 'v1',    'kind': 'Route',    'metadata': {
        \       'labels': {            'component': 'fisgateway-service-stable',            'group':
        'quickstarts',            'project': 'fisgateway-service-stable',            'provider':
        's2i',            'template': 'fisgateway-service',            'version':
        '1.0.0'        },        'name': 'fisgateway-service',        'namespace':
        '${env.stablenamespace}'    },    'spec': {        'host': 'fisgateway-service-${env.stablenamespace}.apps.mkt2go.com',
        \       'to': {            'kind': 'Service',            'name': 'fisgateway-service-stable',
        \           'weight': 100        },        'wildcardPolicy': 'None'    }}\",
        namespace: \"${env.stablenamespace}\", verbose: \"false\"\n  } \n  \n  stage('StopNewServices')
        {\n    print 'Stop all new service pod' \n    openshiftScale depCfg: \"fisgateway-service-new\",
        namespace: \"${env.newnamespace}\", replicaCount: \"0\", verifyReplicaCount:
        \"true\", verbose: \"true\"\n  }\n  \n  stage('GetCurrentLimitId') { \n    print
        'Get Current Limit Id'\n    env.LIMIT_ID = sh (\n      script: \"curl --silent
        -X GET \\\"${env.threescaleurl}/admin/api/application_plans/${env.appplanid}/metrics/${env.metricsid}/limits.xml?access_token=${env.apiaccesstoken}\\\"
        --stderr - | sed -e 's,.*<id>\\\\([^<]*\\\\)</id>.*,\\\\1,g' \", \n      returnStdout:
        true\n    ).trim()\n    echo env.LIMIT_ID\n  }\n  \n  stage('UpdateLimitToAllProd')
        { \n    print 'Update 3scale Limit back to normal'\n    sh  \"echo Updating
        Id ${env.LIMIT_ID} to less request ${env.normallimit} per min because of AB
        Testing\"\n    sh  \"curl -s -o /dev/null -w \\\"%{http_code}\\\\n\\\" -X
        PUT  \\\"${env.threescaleurl}/admin/api/application_plans/${env.appplanid}/metrics/${env.metricsid}/limits/${env.LIMIT_ID}.xml\\\"
        -d \\'access_token=${env.apiaccesstoken}&period=minute&value=${env.normallimit}\\'\"
        \ \n  }\n}"
    type: JenkinsPipeline
  triggers:
  - github:
      secret: secret101
    type: GitHub
  - generic:
      secret: secret101
    type: Generic

